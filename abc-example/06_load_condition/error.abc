#include <stdlib.hdr>
#include <stdio.hdr>

#include "error.hdr"
#include "lexer.hdr"

fn errorMsg(loc: TokenLoc, msg: -> char)
{
    fprintf(stderr, "%d.%d-%d.%d: %s", loc.from.line, loc.from.col, loc.to.line,
	    loc.to.col, msg);
}

fn errorExpected(kind: TokenKind) : bool
{
    if (token.kind != kind) {
	fprintf(stderr, "%d.%d-%d.%d: expected '%s'", token.loc.from.line,
		token.loc.from.col, token.loc.to.line, token.loc.to.col,
		tokenKindStr(kind));
	errorFatal();
	return false;
    }
    return true;
}

fn errorFatal()
{
    exit(1);
}
