type char = u8;
type int = i32;
type size_t = u64;
type void_ptr = ->;

fn malloc(size: size_t): void_ptr;
fn free(ptr: void_ptr);
fn printf(fmt: -> char, ...): int;
fn scanf(fmt: -> char): int;
fn getchar(): int;

struct Node
{
    val: int;
    next: -> Node;
};

fn insertInList(list: -> Node, val: int): -> Node
{
    local n: -> Node = malloc(sizeof(*n));
    n->val = val;
    n->next = list;
    return n;
}

fn printList(list: -> Node)
{
    while (list) {
	printf("val = %d\n", list->val);
	list = list->next;
    }
}

fn main(): u8
{
    local list: -> Node = nullptr;


    while (1) {
	printf("Gib eine Zahl ein oder breche ab mit 'x': ");

	local i: int; 
	if (!scanf("%d", &i)) {
	    break;
	}
	list = insertInList(list, i);
    }

    printf("Diese Zahlen wurden eingegeben: \n");
    printList(list);

    return 0;
}
