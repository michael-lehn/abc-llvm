@ <stdio.hdr>

@ "expr.hdr"
@ "symtab.hdr"

fn main()
{

    symtabAdd("foo", 13);
    symtabAdd("bar", 31);
    symtabSet("foo", 42);

    local one: -> Expr = createLiteralExpr(1);
    local foo: -> Expr = createIdentifierExpr("foo");
    local sum: -> Expr = createBinaryExpr(EXPR_ADD, one, foo);
    local bar: -> Expr = createIdentifierExpr("bar");
    local assign: -> Expr = createBinaryExpr(EXPR_ASSIGN, bar, sum);

    printf("bar = %lld\n", evalExpr(bar));
    printExpr(assign);
    printf("value = %lld\n", evalExpr(assign));
    printf("bar = %lld\n", evalExpr(bar));
}
