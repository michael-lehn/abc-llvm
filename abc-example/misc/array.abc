@ <stdio.hdr>

global a: array[5] of u64,
       b: array[sizeof(a)/sizeof(a[0])] of -> u64;

fn main()
{
    printf("Init a: array of u64\n");
    for (local i: u64 = 0; i < 5; ++i) {
	a[i] = i;
    }
    printf("Init b: array of pointer to u64\n");
    for (local i: u64 = 0; i < sizeof(a)/sizeof(a[0]); ++i) {
	b[i] = &a[i];
    }
    printf("Print dereference integers in b:\n");
    for (local i: u64 = 0; i < sizeof(a)/sizeof(a[0]); ++i) {
	printf("b[%llu]-> = %llu\n", i, b[i]->);
    }

    printf("Define a pointer to a (and print elements of a)\n");
    local c: -> array[sizeof(a)/sizeof(a[0])] of u64 = &a;
    for (local i: u64 = 0; i < sizeof(a)/sizeof(a[0]); ++i) {
	printf("c->[%llu] = %llu\n", i, c->[i]);
    }

    printf("Define a pointer to b (and print elements of a)\n");
    local d: -> array[sizeof(a)/sizeof(a[0])] of -> u64 = &b;
    for (local i: u64 = 0; i < sizeof(a)/sizeof(a[0]); ++i) {
	printf("d->[%llu]-> = %llu\n", i, d->[i]->);
    }
}
