#include <stdio.hdr>

global a: array[3][12] of u64;

fn initMat(p: -> u64, dim0: u64, dim1: u64)
{
    for (local i: u64 = 0; i < dim0; ++i) {
	for (local j: u64 = 0; j < dim1; ++j) {
	    p[i * dim1 + j] = i * dim1 + j;
	}
    }
}

fn printMat(p: -> array[12] of u64, dim0: u64, dim1: u64)
{
    for (local i: u64 = 0; i < dim0; ++i) {
	for (local j: u64 = 0; j < dim1; ++j) {
	    printf("%4llu ", p[i][j]);
	}
	printf("\n");
    }
}

fn main()
{
    // verbose case
    initMat(cast(a:->u64), 3, 12);
    printMat(cast(a:-> array[12] of u64), 3, 12);

    printf("\n\n");

    // slick cast
    initMat(:->u64(a), 3, 12);
    printMat(:-> array[12] of u64(a), 3, 12);
}
