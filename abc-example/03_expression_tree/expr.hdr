#ifndef EXPR_HDR
#define EXPR_HDR

enum ExprKind : i32
{
    EXPR_PRIMARY,
    EXPR_UNARY,
    EXPR_BINARY
};

enum BinaryExprKind : i32
{
    EXPR_ADD,
    EXPR_SUB,
    EXPR_MUL,
    EXPR_DIV,
};

struct Expr
{
    val:    i64;
    binary: struct BinaryExpr {
		op: BinaryExprKind;
		left, right: -> const Expr;
	    };
    kind:   ExprKind;
};

extern fn releaseExpr(expr: -> const Expr);

extern fn createLiteralExpr(val: i64): -> Expr;

extern fn createBinaryExpr(op: BinaryExprKind,
			   left: -> const Expr,
			   right: -> const Expr): -> Expr;

extern fn evalExpr(expr: -> const Expr): i64;

extern fn printExpr(expr: -> const Expr);


#endif // EXPR_HDR
