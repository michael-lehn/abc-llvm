type int = i32;
type char = u8;
fn printf(fmt: -> char, ...): int;

struct Foo {
    a: u64;
    b: -> Foo;
};

struct Bar {
    a: u64;
    b: u64;
};

struct FooBar {
    a: Foo;
    b: Bar;
    c: array[5] of int;
    d: int;
};

global
    x: int = {12345},
    bar: Bar = {123, 456},
    foobar: FooBar = {{1, &x}, {2, 3}, {4, 5}, 6};

fn main()
{
    printf("global: x = %d\n", x);
    printf("global: bar.a = %d, bar.b = %d\n", bar.a, bar.b);
    printf("global: foobar.a.a = %d\n", foobar.a.a);
    printf("global: foobar.a.b = %p\n", foobar.a.b);
    printf("global: foobar.b.a = %d\n", foobar.b.a);
    printf("global: foobar.b.b = %d\n", foobar.b.b);
    printf("global: foobar.c[0] = %d\n", foobar.c[0]);
    printf("global: foobar.c[1] = %d\n", foobar.c[1]);
    printf("global: foobar.c[2] = %d\n", foobar.c[2]);
    printf("global: foobar.c[3] = %d\n", foobar.c[3]);
    printf("global: foobar.c[4] = %d\n", foobar.c[4]);
    printf("global: foobar.d = %d\n", foobar.d);

    local
	x: int = 42;

    local
	foo: Foo = { 123, nullptr},
	bar: Bar = { 4, 156},
	foobar: FooBar = { foo, bar, {1,  2, 3} };

    //foobar.a = foo;
    //foobar.b = bar;

    printf("x = %d\n", x);
    printf("foo.a = %d, foo.b = %p\n", foo.a, foo.b);
    printf("bar.a = %d, bar.b = %d\n", bar.a, bar.b);

    printf("foobar.a.a = %d\n", foobar.a.a);
    printf("foobar.a.b = %d\n", foobar.a.b);
    printf("foobar.b.a = %d\n", foobar.b.a);
    printf("foobar.b.b = %d\n", foobar.b.b);
    printf("foobar.c[0] = %d\n", foobar.c[0]);
    printf("foobar.c[1] = %d\n", foobar.c[1]);
    printf("foobar.c[2] = %d\n", foobar.c[2]);
    printf("foobar.c[3] = %d\n", foobar.c[3]);
    printf("foobar.c[4] = %d\n", foobar.c[4]);
    printf("foobar.d = %d\n", foobar.d);
    /*
    printf("foo.a = %d\n", foo.a);
    printf("foo.b = %d\n", foo.b);
    printf("bar.a = %d\n", bar.a);
    printf("bar.b = %d\n", bar.b);
    */

}

