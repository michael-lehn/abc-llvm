type size_t = u64;
type void_ptr = ->;

fn malloc(size: size_t): void_ptr;
fn free(ptr: void_ptr);
fn printU64(:u64);
fn printNl();

struct Node
{
    val: u16;
    next: -> Node;
};


fn insertInList(list: -> Node, val: u16): -> Node
{
    local n: -> Node = malloc(sizeof(*n));
    n->val = val;
    n->next = list;
    return n;
}

fn printList(list: -> Node)
{
    while (list) {
	printU64(list->val);
	printNl();
	list = list->next;
    }
}

fn main(): u8
{
    local list: -> Node = 0;

    list = insertInList(list, 42);
    list = insertInList(list, 24);
    list = insertInList(list, 123);

    printList(list);

    return 0;
}
